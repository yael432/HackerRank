using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Grid_Search
{
    class Program
    {
        static void Main(string[] args)
        {
            int t = Convert.ToInt32(Console.ReadLine());
            for (int a0 = 0; a0 < t; a0++)
            {
                string[] tokens_R = Console.ReadLine().Split(' ');
                int R = Convert.ToInt32(tokens_R[0]);
                int C = Convert.ToInt32(tokens_R[1]);
                string[] G = new string[R];
                for (int G_i = 0; G_i < R; G_i++)
                {
                    G[G_i] = Console.ReadLine();
                }
                string[] tokens_r = Console.ReadLine().Split(' ');
                int r = Convert.ToInt32(tokens_r[0]);
                int c = Convert.ToInt32(tokens_r[1]);
                string[] P = new string[r];
                for (int P_i = 0; P_i < r; P_i++)
                {
                    P[P_i] = Console.ReadLine();
                }

                bool pattenFound = false;
                int matchIndexCounter=0;
                int lastRowToCheck = R - r + 1;
                for (int row = 0; row < lastRowToCheck; row++)
                {
                    int lastColToCheck = C - c + 1;
                    for (int col = 0; col < lastColToCheck; col++)
                    {
                        int firstColIndexPattern = G[row].IndexOf(P[0],col);

                        if (firstColIndexPattern >= 0)
                        {
                            matchIndexCounter = 1;
                            int i = 1;
                            int colIndexPattern = firstColIndexPattern;
                            while (i < r && colIndexPattern == firstColIndexPattern)
                            {
                                colIndexPattern = G[row + i].IndexOf(P[i], col);

                                if (colIndexPattern == firstColIndexPattern)
                                {
                                    matchIndexCounter++;
                                }

                                i++;
                            }

                        }
                        else
                        {
                            break;
                        }

                        if (matchIndexCounter == r)
                        {
                            pattenFound = true;
                            break;
                        }
                    }

                    if(pattenFound)
                    {
                        break;
                    }
                    
                }

                if(pattenFound)
                {
                    Console.WriteLine("YES");
                }
                else
                {
                    Console.WriteLine("NO");
                }
            }
        }
    }
}
